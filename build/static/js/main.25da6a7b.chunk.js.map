{"version":3,"sources":["logo.svg","component/Result.js","action/oantutiAction.js","constant/oantutiConstant.js","component/RenderItem.js","component/Play.js","component/GameOanTuTi.js","App.js","serviceWorker.js","reducer/oantutiReducer.js","reducer/rootReducer.js","index.js"],"names":["module","exports","connect","dispatch","play","count","randomInterval","setInterval","type","clearInterval","props","result","winning","playClick","className","onClick","chooseItem","item","chooseItemAction","propsImg","keyframe","Date","now","console","log","style","position","width","height","overflow","backgroundColor","src","cursor","top","left","animation","alt","state","arrImg","oantutiReducer","arrImgInState","imgShow","imgShowInState","imgRandom","imgShowRandomInState","map","index","Object","keys","indexx","key","GameOanTuTi","backgroundImage","backgroundSize","backgroundPosition","Component","App","Boolean","window","location","hostname","match","initialState","action","imgShowInStateNew","imgShowRandomInStateNew","Math","floor","random","length","valueRandom","valueChoose","resultNew","winningNew","values","value","combineReducers","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25da6a7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { playAction, checkResult } from \"../action/oantutiAction\";\r\n\r\nfunction Result(props) {\r\n  let { result, winning, playClick } = props;\r\n  const renderResult = () => {\r\n    if (result === \"\") {\r\n      return <h1>Im iron man, i love you 3000!!!</h1>;\r\n    } else if (result === \"WIN\") {\r\n      return <h1 className=\"text-success\">YOU WIN!</h1>;\r\n    }else if(result === \"LOSE\"){\r\n        return <h1 className=\"text-danger\">YOU LOSE!</h1>;\r\n    }else{\r\n        return <h1>DRAW</h1>;\r\n    }\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div className=\"resultComponent\">\r\n      <div className=\"text-nowrap\">{renderResult()}</div>\r\n      <h2>\r\n        Số bàn thắng: <span> {winning}</span>\r\n      </h2>\r\n      <h2>\r\n        Số bàn chơi: <span> {playClick}</span>\r\n      </h2>\r\n      <button onClick={() => props.play()} className=\"btn btn-success\">\r\n        Play game\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    play: () => {\r\n      let count = 0;\r\n      let randomInterval = setInterval(()=>{\r\n        dispatch(playAction());\r\n        count ++;\r\n        if(count >=15){\r\n          clearInterval(randomInterval)\r\n          dispatch(checkResult());\r\n        }\r\n      }, 100)\r\n     \r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Result);\r\n","import { CHOOSE, PLAY, CHECKRESULT } from \"../constant/oantutiConstant\";\r\n\r\nexport const chooseItemAction = (item) => {\r\n  return { type: CHOOSE, item };\r\n};\r\n\r\nexport const playAction = () => {\r\n  return { type: PLAY };\r\n};\r\n\r\nexport const checkResult = () => {\r\n  return {type: CHECKRESULT}\r\n}","export const CHOOSE = 'CHOOSE'\r\nexport const PLAY = 'PLAY'\r\nexport const CHECKRESULT = 'CHECKRESULT'","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { chooseItemAction } from \"../action/oantutiAction\";\r\nfunction RenderItem(props) {\r\n  let { propsImg, item } = props;\r\n  let keyframe = `@keyframes randomAnimation${Date.now()}{\r\n    0% {top: -25px}\r\n    25% {top: 50px}\r\n    50% {top: -25px}\r\n    75% {top: 50px}\r\n    100% {top: 0px}\r\n  }`\r\n  console.log(keyframe);\r\n  return(\r\n    <div style={{position: 'relative', width: \"50px\",\r\n    height: \"50px\",overflow: 'hidden', backgroundColor: 'white'}}>\r\n    <style>\r\n      {keyframe}\r\n    </style>\r\n  <img\r\n  onClick={()=>props.chooseItem(item)}\r\n    \r\n    src={propsImg}\r\n    style={{\r\n      width: \"50px\",\r\n      height: \"50px\",\r\n      backgroundColor: \"white\",\r\n      cursor: \"pointer\",\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      animation: `randomAnimation${Date.now()} 0.5s`,\r\n    }}\r\n    alt=\"\"\r\n  />\r\n  </div>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n    chooseItem: (item) => dispatch(chooseItemAction(item))\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(RenderItem)","import React from \"react\";\r\nimport \"../buble.css\";\r\nimport \"../App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Result from \"./Result\";\r\nimport RenderItem from \"./RenderItem\";\r\nfunction Play(props) {\r\n  let { arrImg, imgShow, imgRandom } = props;\r\n\r\n  //render bua bao keo de player chon\r\n  const renderItems = () => {\r\n    return arrImg.map((item, index) => {\r\n      return Object.keys(item).map((propsImg, indexx) => {\r\n        return (\r\n          <div key=\"index\">\r\n            <RenderItem propsImg={propsImg} item={item} />\r\n          </div>\r\n        );\r\n      });\r\n    });\r\n  };\r\n\r\n  //render bua bao keo da duoc chon\r\n  const renderItemsChoosen = () => {\r\n    return imgShow.map((item, index) => {\r\n      return Object.keys(item).map((propsImg, indexx) => {\r\n        return (\r\n          <div key={index}>\r\n            <RenderItem propsImg={propsImg} item={item} />\r\n          </div>\r\n        );\r\n      });\r\n    });\r\n  };\r\n\r\n  //render bua bao keo ngau nhien cho computer\r\n  const renderItemsRandom = () => {\r\n    return imgRandom.map((item, index) => {\r\n      return Object.keys(item).map((propsImg, indexx) => {\r\n        return (\r\n          <div key={index}>\r\n            <RenderItem propsImg={propsImg} item={item} />\r\n          </div>\r\n        );\r\n      });\r\n    });\r\n    \r\n  };\r\n  return (\r\n    <div className=\"playComponent\">\r\n      <img className=\"player\" src=\"./img/player.png\" alt=\"\" />\r\n      <div className=\"buabaokeo d-flex\">{renderItems()}</div>\r\n      <div className=\"speech-bubble\">{renderItemsChoosen()}</div>\r\n\r\n      <Result playClick={props.playClick} result={props.result} winning={props.winning} />\r\n\r\n      <img className=\"computer\" src=\"./img/playerComputer.png\" alt=\"\" />\r\n      <div className=\"speech-bubble bubble-computer\">\r\n        {renderItemsRandom()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    arrImg: state.oantutiReducer.arrImgInState,\r\n    imgShow: state.oantutiReducer.imgShowInState,\r\n    imgRandom: state.oantutiReducer.imgShowRandomInState,\r\n    playClick: state.oantutiReducer.playClick,\r\n    result: state.oantutiReducer.result,\r\n    winning: state.oantutiReducer.winning,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Play);\r\n","import React, { Component } from \"react\";\r\nimport Play from \"./Play\";\r\n\r\n\r\nexport default class GameOanTuTi extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundImage: `url('./img/bgGame.png')`,\r\n          width: \"100%\",\r\n          height: \"100vh\",\r\n          backgroundSize: \"cover\",\r\n          position: 'relative',\r\n          backgroundPosition: 'center center'\r\n        }}\r\n      >\r\n        <Play />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport GameOanTuTi from './component/GameOanTuTi';\nimport './buble.css'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameOanTuTi/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHOOSE, PLAY, CHECKRESULT } from \"../constant/oantutiConstant\";\r\n\r\nconst initialState = {\r\n  arrImgInState: [\r\n    { \"./img/bua.png\": \"bua\" },\r\n    { \"./img/bao.png\": \"bao\" },\r\n    { \"./img/keo.png\": \"keo\" },\r\n  ],\r\n  imgShowInState: [{ \"./img/bua.png\": \"bua\" }],\r\n  imgShowRandomInState: [{ \"./img/bua.png\": \"bua\" }],\r\n  winning: 0,\r\n  playClick: 0,\r\n  result: \"\",\r\n};\r\nconst oantutiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHOOSE: {\r\n      let imgShowInStateNew = [action.item];\r\n      return { ...state, imgShowInState: imgShowInStateNew };\r\n    }\r\n    case PLAY: {\r\n      let imgShowRandomInStateNew = [\r\n        state.arrImgInState[\r\n          Math.floor(Math.random() * state.arrImgInState.length)\r\n        ],\r\n      ];\r\n      return {\r\n        ...state,\r\n        imgShowRandomInState: imgShowRandomInStateNew,\r\n      };\r\n    }\r\n    case CHECKRESULT:{\r\n      let valueRandom = \"\";\r\n      let valueChoose = [state.imgShowInState];\r\n      let resultNew = state.result;\r\n      let winningNew = state.winning;\r\n      let imgShowRandomInStateNew = state.imgShowRandomInState;\r\n      state.imgShowInState.map((item, index) => {\r\n        return Object.values(item).map((value, indexx) => {\r\n          return (valueChoose = value);\r\n        });\r\n      });\r\n      imgShowRandomInStateNew.map((item, index) => {\r\n        return Object.values(item).map((value, indexx) => {\r\n          return (valueRandom = value);\r\n        });\r\n      });\r\n      if (valueChoose === \"keo\") {\r\n        if (valueRandom === \"keo\") {\r\n          resultNew = \"DRAW\";\r\n        } else if (valueRandom === \"bao\") {\r\n          resultNew = \"WIN\";\r\n        } else {\r\n          resultNew = \"LOSE\";\r\n        }\r\n      } else if (valueChoose === \"bao\") {\r\n        if (valueRandom === \"keo\") {\r\n          resultNew = \"LOSE\";\r\n        } else if (valueRandom === \"bao\") {\r\n          resultNew = \"DRAW\";\r\n        } else {\r\n          resultNew = \"WIN\";\r\n        }\r\n      } else {\r\n        if (valueRandom === \"keo\") {\r\n          resultNew = \"WIN\";\r\n        } else if (valueRandom === \"bao\") {\r\n          resultNew = \"LOSE\";\r\n        } else {\r\n          resultNew = \"DRAW\";\r\n        }\r\n      }\r\n\r\n      if (resultNew === \"WIN\") {\r\n        winningNew += 1;\r\n      }\r\n      return {\r\n        ...state,\r\n        winning: winningNew,\r\n        playClick: ++state.playClick,\r\n        result: resultNew,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default oantutiReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport oantutiReducer from \"./oantutiReducer\";\r\nexport default combineReducers({\r\n    oantutiReducer,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducer/rootReducer\";\nconst store = createStore(\n  rootReducer,\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n      window.__REDUX_DEVTOOLS_EXTENSION__  ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : f => f \n\n)\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}